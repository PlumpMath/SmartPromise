@using Promises.Views.Cabinet
@inject UserManager<ApplicationUser> userManager

@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ProfileViewModel profileViewModel = ViewData.GetProfileViewModel();
    
    if (profileViewModel == null)
    {
        var owner = await userManager.GetUserAsync(User);
        profileViewModel = new ProfileViewModel
        {
            Email = owner.Email,
            Id = owner.Id,
            Address = owner.Address,
            IsYourProfile = true,
            IsOnline = true,
            Avatar = owner.Avatar,
            AvatarContentType = owner.AvatarContentType

        };
    }
}


<style>
    body {
        padding-top: 70px;
    }
</style>



@{
    if (!profileViewModel.IsYourProfile)
    {
        @await Html.PartialAsync("_ModalPay", profileViewModel);
    }
}

@await Html.PartialAsync("_ModalPaymentsDetails", profileViewModel)
@await Html.PartialAsync("_ModalTransactionHistory", profileViewModel)

<div class="container">
    <div class="row row-offcanvas row-offcanvas-left">
        <div class="col-6 col-md-3 sidebar-offcanvas" id="sidebar">
            
            @{
                var view = profileViewModel.IsYourProfile? 
                    "_YourProfile" : "_OtherUserProfile";
            }

            @await Html.PartialAsync(@view, profileViewModel)
            <hr />
            @await Html.PartialAsync("_CabinetNav", profileViewModel)
            <hr />
        </div>
        <div class="col-12 col-md-9">
            @RenderBody()
        </div>
    </div>
</div>

@section Scripts {
    @{
        //Global varuables
    } 
    <script type="text/javascript">
        //TODO rewrite
        $.get('@Url.Action("GetUnreadAmount", "Cabinet")', v => $("#_messages_nav_id").html((v == 0 ? "" : v )))
        let _RAZOR_URL_CABINET_PRIVATE_CHAT = '@Url.Action("PrivateChat", "Cabinet", new { friendId = "__id__", friendEmail = "__email__" })'
        let _RAZOR_URL_CABINET_GET_AVATAR = '@Url.Action("GetAvatarImage", "Cabinet", new { width ="__width__", height="__height__", quality="__quality__", userId = "__id__" })'
        let _RAZOR_PROFILE_LINK = '@Url.Action("Profile", "Cabinet", new { userId = "__id__"})'
        let _RAZOR_GET_TRANSACTION_HISTORY = '@Url.Action("GetTransactionHistory", "Blockchain", new { network = "__network__", addr = "__addr__"})'
        let _RAZOR_BLOCKCHAIN_GET_BALANCE = '@Url.Action("GetBalance", "Blockchain", new { network = "__network__", addr = "__addr__" })'
        let _RAZOR_GET_MY_ADDRESS = '@Url.Action("GetMyAddress", "Friends")'
        let _RAZOR_SEND_ASSET = '@Url.Action("SendAsset", "Blockchain", new { type = "__network__", assetName = "__assetName__", addr = "__addr__", amount = "__amount__" })'
        let _RAZOR_ADD_PROMISE = '@Url.Action("Add", "Promises", new { title = "__title__", content = "__content__", complicity = "__complicity__", date = "__date__" })'
        let _RAZOR_GET_PROMISES = '@Url.Action("Get", "Promises", new { address = "__address__" })'
        let _RAZOR_COMPLETE_PROMISE = '@Url.Action("Complete", "Promises", new { id = "__id__", proof = "__proof__"})'
        let _RAZOR_IS_YOUR_OWN_PAGE = '@Html.Raw(Json.Serialize(profileViewModel.IsYourProfile))'

        let _RAZOR_PROFILE_VIEW_USER_ADDRESS = '@profileViewModel.Address'

        let _RAZOR_NOTIFICATION_CONNECTION = new signalR.HubConnection('/notification')
        _RAZOR_NOTIFICATION_CONNECTION.start()
    </script>

    <script type="text/javascript">
        Notification()
        GenerateQrAddressCode()
        ModalTransactionHistory()
    </script>


    @if (!profileViewModel.IsYourProfile)
    {
        <script type="text/javascript">
            ModalPay()
        </script>
    }

    @if (ViewData["ActivePage"] != null)
    {
        switch (ViewData["ActivePage"].ToString())
        {
            case @CabinetNavPages.Friends:
                <script type="text/javascript">
                    Friends()
                </script>
                break;
            case @CabinetNavPages.PrivateChat:
                <script type="text/javascript">
                    Chat()
                </script>
                break;
            case @CabinetNavPages.Messages:
                <script type="text/javascript">
                    Messages()
                </script>
                break;
            case CabinetNavPages.Profile:
                <script type="text/javascript">
                    ProfilePage()
                </script>
                break;
        }
    }
    }